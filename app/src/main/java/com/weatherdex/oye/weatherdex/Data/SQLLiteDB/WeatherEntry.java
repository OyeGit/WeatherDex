package com.weatherdex.oye.weatherdex.Data.SQLLiteDB;

import java.util.Date;
import android.arch.persistence.room.Entity;
import android.arch.persistence.room.Ignore;
import android.arch.persistence.room.Index;
import android.arch.persistence.room.PrimaryKey;
import android.arch.persistence.room.Room;

@Entity(tableName = "weather", indices = {@Index(value = {"date"}, unique = true)})
public class WeatherEntry {

    // Makes sure the id is the primary key (ensures uniqueness), is auto generated by {@link Room}.
    @PrimaryKey(autoGenerate = true)
    private int id;
    private int weatherIconId;
    private Date date;
    private double tempMin;
    private double tempMax;
    private double humidity;
    private double pressure;
    private double wind;
    private double degrees;
    private int tempMinTime;
    private int tempMaxTime;
    private int sunriseTime;
    private int sunsetTime;

    // Constructor used to open the Json Parser when there's data and it converts the json from mock
    // weather server to weatherEntry Object. Room doesn't work with 2 Constructors. So we use the
    // ignore Annotation.
    @Ignore
    public WeatherEntry(int weatherIconId, Date date, double min, double max, double humidity, double pressure,
                        double wind, double degrees, int tempMinTime, int tempMaxTime, int sunriseTime, int sunsetTime ) {
        this.weatherIconId = weatherIconId;
        this.date = date;
        this.degrees = degrees;
/*
        this.date = date;
        this.tempMin = min;
        this.tempMax = max;
        this.humidity = humidity;
        this.pressure = pressure;
        this.wind = wind;
        this.degrees = degrees;
        this.tempMinTime = tempMinTime;
        this.tempMaxTime = tempMaxTime;
        this.sunriseTime = sunriseTime;
        this.sunsetTime = sunsetTime;
        */
        // -53,6 +70,19 @@ public WeatherEntry(int weatherIconId, Date date, double min, double max, double
    }

    // Constructor used by Room to create WeatherEntries
    public WeatherEntry(int id, int weatherIconId, Date date, double tempMin, double tempMax, double humidity, double pressure,
                        double wind, double degrees, int tempMinTime, int tempMaxTime, int sunriseTime, int sunsetTime  ) {
        this.id = id;
        this.weatherIconId = weatherIconId;
        this.date = date;
        this.tempMin = tempMin;
        this.tempMax = tempMax;
        this.humidity = humidity;
        this.pressure = pressure;
        this.wind = wind;
        this.degrees = degrees;
        this.tempMinTime = tempMinTime;
        this.tempMaxTime = tempMaxTime;
        this.sunriseTime = sunriseTime;
        this.sunsetTime = sunsetTime;
    }

    public int getId() {
        return id;
    }


    public int getWeatherIconId() {
        return weatherIconId;
    }

    public Date getDate() {
        return date;
    }

    public double getTempMin() {
        return tempMin;
    }

    public int getTempMinTime() {
        return tempMinTime;
    }

    public double getTempMax() {
        return tempMax;
    }

    public int getTempMaxTime() {
        return tempMaxTime;
    }

    public double getHumidity() {
        return humidity;
    }

    public double getPressure() {
        return pressure;
    }

    public double getWind() {
        return wind;
    }

    public double getDegrees() {
        return degrees;
    }

    public int getSunriseTime() {
        return sunriseTime;
    }

    public int getSunsetTime() {
        return sunsetTime;
    }
}